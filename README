#Purpose
Animated Graph is a graph representation and visualization tool, made possible by Javascript and the canvas element.

#Usage
1. Include js files
    <script src='lib/Graph.js' type='application/javascript'></script>
    <script src='lib/ForceGraph.js' type='application/javascript'></script>
    <script src='lib/ForceNode.js' type='application/javascript'></script>
    <script src='lib/Physics.js' type='application/javascript'></script>
    <script src='lib/Vector.js' type='application/javascript'></script>
    <script src='lib/AnimatedGraph.js' type='application/javascript'></script>

2. Create and initialize graph
    var ag = new AnimatedGraph();
    ag.addEdge(1,2);
    ag.addEdge(1,"text");
    ag.addEdge(2,"text");
    ag.model.scatterNodes(640,480);

3. Create graph canvas and insert it
    ag.createCanvas(640,480);
    document.getElementById('main').appendChild(ag.canvas);

4. Run visualization
    ag.run();

I have included an html file with a more interesting graph serving as example.

#Final notes
I have used hooke's and coulumb's laws to position the nodes, and the 4th order Runge-Kutta method to calculate approximate positions.

The graph can contain any type of objects, the only requirement is that they specify the toString method, since this is used to identify nodes in the graph structure.

The code is compatible with all the latest browsers (FF/Opera/Chrome/Safari) except IE, since it currently doesn't support canvas.
